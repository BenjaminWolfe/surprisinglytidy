% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knit.R
\name{render_chunk}
\alias{render_chunk}
\title{Render chunk output with classes in Xaringan (for remark.js)}
\usage{
render_chunk(x, options, inline = FALSE, ...)
}
\arguments{
\item{x}{Character. Chunk output.}

\item{options}{List. Options as passed from \code{knitr}.}

\item{inline}{Logical. As passed from \code{knitr}. Is the result inline?}

\item{...}{Other parameters passed from \code{knitr}.}
}
\value{
\code{knitr} object for printing.
}
\description{
Reasonably savvy in selecting the right option for your output.
}
\details{
Currently the function uses \code{\link{render_html_chunk}}
if the \code{knitr} output is an \code{htmlwidget} or \code{knitr_kable}.
Otherwise, if \code{results} is set to "asis",
it uses \code{\link{render_asis_chunk}}.
For standard fenced output (beginning and ending with three backticks),
\code{surprisinglytidy} relies on \code{sassy.js}
to post-process Pandoc-syntax classes into remark.js classes.
}
\examples{
\dontrun{
# In \\code{knitr} setup:
knitr::opts_chunk$set(         # first option tells knitr to use function
  render        = surprisinglytidy::render_chunk
  class.source  = ".r-source", # you can set each separately
  class.warning = ".r-warning",# class.output is what render_chunk will use
  class.message = ".r-message",# note that you can use multiple classes,
  class.error   = ".r-error",  # separated by a space
  class.output  = ".r-output .another-class"
)
}
}
